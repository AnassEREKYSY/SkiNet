name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  API_IMAGE: ghcr.io/${{ github.repository_owner }}/skinet-api:${{ github.sha }}
  CLIENT_IMAGE: ghcr.io/${{ github.repository_owner }}/skinet-client:${{ github.sha }}

jobs:
  build-client:
    name: Build Angular client
    runs-on: ubuntu-latest
    outputs:
      client-built: ${{ steps.build-client.outcome }}
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install client deps
        run: npm ci
        working-directory: ./client

      - name: Build client production
        run: npm run build -- --configuration=production
        working-directory: ./client

  build-and-push:
    name: Build & push Docker images
    needs: build-client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & push API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: API/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/skinet-api:latest
            ${{ env.API_IMAGE }}

      - name: Build & push Client image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/skinet-client:latest
            ${{ env.CLIENT_IMAGE }}

  deploy:
    name: Deploy to OVH VM
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH to OVH and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.OVH_HOST }}
          username: ${{ secrets.OVH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: API_IMAGE,CLIENT_IMAGE
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull $API_IMAGE
            docker pull $CLIENT_IMAGE

            docker stop skinet-api || true
            docker rm skinet-api || true
            docker stop skinet-client || true
            docker rm skinet-client || true

            docker run -d \
              --name skinet-api \
              -p 5001:80 \
              --restart unless-stopped \
              -e ASPNETCORE_ENVIRONMENT=Production \
              -e ConnectionStrings__DefaultConnection="Server=sql,1433;Database=SkiNet;User Id=sa;Password=Password@1;TrustServerCertificate=True" \
              -e ConnectionStrings__Redis="redis:6379" \
              $API_IMAGE

            docker run -d \
              --name skinet-client \
              -p 4200:80 \
              --restart unless-stopped \
              $CLIENT_IMAGE
