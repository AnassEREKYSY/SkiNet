name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  API_IMAGE: ghcr.io/anasserekysy/skinet-api:${{ github.sha }}
  CLIENT_IMAGE: ghcr.io/anasserekysy/skinet-client:${{ github.sha }}

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm ci
        working-directory: ./client
      - run: npm run build -- --configuration=production
        working-directory: ./client

  push-to-ghcr:
    needs: build-client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & push API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: API/Dockerfile
          push: true
          tags: |
            ghcr.io/anasserekysy/skinet-api:latest
            ${{ env.API_IMAGE }}

      - name: Build & push Client image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ghcr.io/anasserekysy/skinet-client:latest
            ${{ env.CLIENT_IMAGE }}

  deploy:
    needs: push-to-ghcr
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.OVH_HOST }}
          username: ${{ secrets.OVH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: API_IMAGE,CLIENT_IMAGE
          script: |
            docker network inspect skinet-net >/dev/null 2>&1 || docker network create skinet-net
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }}
            docker pull $API_IMAGE
            docker pull $CLIENT_IMAGE
            docker stop skinet-api skinet-client || true
            docker rm   skinet-api skinet-client || true

            docker run -d \
              --name skinet-api \
              --network skinet-net \
              --network-alias api \
              -p 5001:80 \
              --restart unless-stopped \
              -e ASPNETCORE_ENVIRONMENT=Production \
              -e ConnectionStrings__DefaultConnection="Server=sql,1433;Database=SkiNet;User Id=sa;Password=Password@1;TrustServerCertificate=True" \
              -e ConnectionStrings__Redis="redis:6379" \
              $API_IMAGE

            docker run -d \
              --name skinet-client \
              --network skinet-net \
              -p 4200:80 \
              --restart unless-stopped \
              $CLIENT_IMAGE
